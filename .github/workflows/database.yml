name: Deploy Database to Mongo DB Atlas

on:
  push:
    branches:
      - release

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Google Cloud credentials
      run: |
        echo '${{ secrets.GOOGLE_CREDENTIALS }}' > auth.json
        echo "GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/auth.json" >> $GITHUB_ENV

    - name: Install retry
      run: sudo apt-get update && sudo apt-get install -y moreutils

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init -input=false -force-copy

    - name: Terraform Validate
      run: terraform validate

    - name: Set variables for Terraform
      run: |
        echo "mongo_org_id = \"${{ secrets.MONGO_ORG_ID }}\"" >> production.auto.tfvars
        echo "mongo_public_key = \"${{ secrets.MONGO_PUBLIC_KEY }}\"" >> production.auto.tfvars        
        echo "mongo_private_key = \"${{ secrets.MONGO_PRIVATE_KEY }}\"" >> production.auto.tfvars
        echo "mongo_dbuser_password = \"${{ secrets.MONGO_DBUSER_PASSWORD }}\"" >> production.auto.tfvars
        echo "mongo_dbuser = \"${{ secrets.MONGO_DBUSER }}\"" >> production.auto.tfvars

    - name: Terraform Plan
      run: retry -t 20 -d 30 -- terraform plan -target=module.production_db -var-file=production.auto.tfvars

    - name: Terraform Apply MongoDB
      run: retry -t 20 -d 30 -- terraform apply -auto-approve -target=module.production_db -var-file=production.auto.tfvars

    - name: Extract Mongo Connection String
      run: |
        MONGO_CONNECTION_STRING=$(terraform output connection_strings)
        echo "MONGO_CONNECTION_STRING=$MONGO_CONNECTION_STRING"
        
    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq
          
    - name: Store Database connection string as GitHub Secret
      if: ${{ success() }}
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PERMISSIONS }}
      run: |
        echo "MONGO_CONNECTION_STRING=$MONGO_CONNECTION_STRING" # Just for debugging purposes, remove this line if you don't want to see it in the logs
        ENCRYPTED_VALUE=$(echo -n "$MONGO_CONNECTION_STRING" | gpg --symmetric --cipher-algo AES256 --batch --passphrase="$GITHUB_TOKEN" | base64 -w0)
        KEY_ID=$(curl -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github+json" "https://api.github.com/repos/$GITHUB_REPOSITORY/actions/secrets/public-key" | jq -r '.key_id')
        
        curl -L \
          -X PUT \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/$GITHUB_REPOSITORY/actions/secrets/MONGO_CONNECTION_STRING \
          -d '{"encrypted_value":"'"$ENCRYPTED_VALUE"'","key_id":"'"$KEY_ID"'"}'

  handle_failure:
    runs-on: ubuntu-latest
    needs: [deploy]
    if: ${{ failure() }}
    steps:
      - uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
