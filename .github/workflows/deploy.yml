name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - release

jobs:
  docker-build-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build and push the client image
      uses: docker/build-push-action@v2
      with:
        context: client
        file: client/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fileexchangehubclient:${{ github.sha }}

    - name: Build and push the server image
      uses: docker/build-push-action@v2
      with:
        context: server
        file: server/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fileexchangehubserver:${{ github.sha }}

    - name: Build and push the socket server image
      uses: docker/build-push-action@v2
      with:
        context: socket-server
        file: socket-server/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fileexchangehubsocketserver:${{ github.sha }}
    
    - name: Build and push the file gateway image
      uses: docker/build-push-action@v2
      with:
        context: file-gateway
        file: file-gateway/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fileexchangehubfilegateway:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build-push

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Google Cloud credentials
      run: echo '${{ secrets.GOOGLE_CREDENTIALS }}' > auth.json; echo '${{ secrets.GOOGLE_CREDENTIALS }}' > file-gateway/auth.json
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init -target=module.production

    - name: Terraform Validate
      run: terraform validate -var-file=production.tfvars

    - name: Set variables for Terraform
      run: |
        echo "socket_server_image_tag = \"${{ github.sha }}\"" >> production.tfvars
        echo "file_gateway_image_tag = \"${{ github.sha }}\"" >> production.tfvars
        echo "client_image_tag = \"${{ github.sha }}\"" >> production.tfvars
        echo "server_image_tag = \"${{ github.sha }}\"" >> production.tfvars

    - name: Terraform Plan
      run: terraform plan -target=module.production -var-file=production.tfvars

    - name: Terraform Apply
      run: terraform apply -auto-approve -target=module.production -var-file=production.tfvars